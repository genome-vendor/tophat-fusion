# Makefile.in generated by automake 1.9.6 from Makefile.am.
# src/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.






srcdir = .
top_srcdir = ..

pkgdatadir = $(datadir)/tophat
pkglibdir = $(libdir)/tophat
pkgincludedir = $(includedir)/tophat
top_builddir = ..
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = /usr/bin/install -c
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-unknown-linux-gnu
host_triplet = x86_64-unknown-linux-gnu
DIST_COMMON = $(dist_bin_SCRIPTS) $(noinst_HEADERS) \
	$(srcdir)/Makefile.am $(srcdir)/Makefile.in \
	$(top_srcdir)/build-aux/tophat.mk
bin_PROGRAMS = prep_reads$(EXEEXT) tophat_reports$(EXEEXT) \
	juncs_db$(EXEEXT) gtf_juncs$(EXEEXT) extract_reads$(EXEEXT) \
	segment_juncs$(EXEEXT) closure_juncs$(EXEEXT) \
	long_spanning_reads$(EXEEXT) fix_map_ordering$(EXEEXT) \
	library_stats$(EXEEXT) mask_sam$(EXEEXT) wiggles$(EXEEXT) \
	sam_juncs$(EXEEXT)
subdir = src
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/ax_bam.m4 \
	$(top_srcdir)/ax_check_zlib.m4 $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
LIBRARIES = $(noinst_LIBRARIES)
ARFLAGS = cru
libgc_a_AR = $(AR) $(ARFLAGS)
libgc_a_LIBADD =
am_libgc_a_OBJECTS = GBase.$(OBJEXT) codons.$(OBJEXT) gdna.$(OBJEXT) \
	GStr.$(OBJEXT) GFaSeqGet.$(OBJEXT) gff.$(OBJEXT)
libgc_a_OBJECTS = $(am_libgc_a_OBJECTS)
libtophat_a_AR = $(AR) $(ARFLAGS)
libtophat_a_LIBADD =
am_libtophat_a_OBJECTS = reads.$(OBJEXT) alphabet.$(OBJEXT) \
	bwt_map.$(OBJEXT) common.$(OBJEXT) junctions.$(OBJEXT) \
	insertions.$(OBJEXT) deletions.$(OBJEXT) fusions.$(OBJEXT) \
	align_status.$(OBJEXT) fragments.$(OBJEXT) tokenize.$(OBJEXT) \
	inserts.$(OBJEXT) qual.$(OBJEXT)
libtophat_a_OBJECTS = $(am_libtophat_a_OBJECTS)
am__installdirs = "$(DESTDIR)$(bindir)" "$(DESTDIR)$(bindir)"
binPROGRAMS_INSTALL = $(INSTALL_PROGRAM)
PROGRAMS = $(bin_PROGRAMS)
am_closure_juncs_OBJECTS = closures.$(OBJEXT)
closure_juncs_OBJECTS = $(am_closure_juncs_OBJECTS)
am__DEPENDENCIES_1 =
closure_juncs_DEPENDENCIES = $(top_builddir)/src/libtophat.a \
	$(am__DEPENDENCIES_1)
am_extract_reads_OBJECTS = extract_reads.$(OBJEXT)
extract_reads_OBJECTS = $(am_extract_reads_OBJECTS)
extract_reads_DEPENDENCIES = $(top_builddir)/src/libtophat.a \
	$(am__DEPENDENCIES_1)
am_fix_map_ordering_OBJECTS = fix_map_ordering.$(OBJEXT)
fix_map_ordering_OBJECTS = $(am_fix_map_ordering_OBJECTS)
fix_map_ordering_DEPENDENCIES = $(top_builddir)/src/libtophat.a \
	$(am__DEPENDENCIES_1)
am_gtf_juncs_OBJECTS = gtf_juncs.$(OBJEXT)
gtf_juncs_OBJECTS = $(am_gtf_juncs_OBJECTS)
gtf_juncs_DEPENDENCIES = $(top_builddir)/src/libtophat.a libgc.a \
	$(am__DEPENDENCIES_1)
am_juncs_db_OBJECTS = juncs_db.$(OBJEXT)
juncs_db_OBJECTS = $(am_juncs_db_OBJECTS)
juncs_db_DEPENDENCIES = $(top_builddir)/src/libtophat.a \
	$(am__DEPENDENCIES_1)
am_library_stats_OBJECTS = library_stats.$(OBJEXT)
library_stats_OBJECTS = $(am_library_stats_OBJECTS)
library_stats_DEPENDENCIES = $(top_builddir)/src/libtophat.a \
	$(am__DEPENDENCIES_1)
am_long_spanning_reads_OBJECTS = long_spanning_reads.$(OBJEXT)
long_spanning_reads_OBJECTS = $(am_long_spanning_reads_OBJECTS)
long_spanning_reads_DEPENDENCIES = $(top_builddir)/src/libtophat.a \
	$(am__DEPENDENCIES_1)
am_mask_sam_OBJECTS = mask_sam.$(OBJEXT)
mask_sam_OBJECTS = $(am_mask_sam_OBJECTS)
mask_sam_DEPENDENCIES = $(top_builddir)/src/libtophat.a \
	$(am__DEPENDENCIES_1)
am_prep_reads_OBJECTS = prep_reads.$(OBJEXT)
prep_reads_OBJECTS = $(am_prep_reads_OBJECTS)
prep_reads_DEPENDENCIES = $(top_builddir)/src/libtophat.a \
	$(am__DEPENDENCIES_1)
am_sam_juncs_OBJECTS = sam_juncs.$(OBJEXT)
sam_juncs_OBJECTS = $(am_sam_juncs_OBJECTS)
sam_juncs_DEPENDENCIES = $(top_builddir)/src/libtophat.a \
	$(am__DEPENDENCIES_1)
am_segment_juncs_OBJECTS = segment_juncs.$(OBJEXT)
segment_juncs_OBJECTS = $(am_segment_juncs_OBJECTS)
segment_juncs_DEPENDENCIES = $(top_builddir)/src/libtophat.a \
	$(am__DEPENDENCIES_1)
am_tophat_reports_OBJECTS = tophat_reports.$(OBJEXT)
tophat_reports_OBJECTS = $(am_tophat_reports_OBJECTS)
tophat_reports_DEPENDENCIES = $(top_builddir)/src/libtophat.a \
	$(am__DEPENDENCIES_1)
am_wiggles_OBJECTS = wiggles.$(OBJEXT)
wiggles_OBJECTS = $(am_wiggles_OBJECTS)
wiggles_DEPENDENCIES = $(top_builddir)/src/libtophat.a \
	$(am__DEPENDENCIES_1)
dist_binSCRIPT_INSTALL = $(INSTALL_SCRIPT)
SCRIPTS = $(dist_bin_SCRIPTS)
DEFAULT_INCLUDES = -I. -I$(srcdir) -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/build-aux/depcomp
am__depfiles_maybe = depfiles
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
SOURCES = $(libgc_a_SOURCES) $(libtophat_a_SOURCES) \
	$(closure_juncs_SOURCES) $(extract_reads_SOURCES) \
	$(fix_map_ordering_SOURCES) $(gtf_juncs_SOURCES) \
	$(juncs_db_SOURCES) $(library_stats_SOURCES) \
	$(long_spanning_reads_SOURCES) $(mask_sam_SOURCES) \
	$(prep_reads_SOURCES) $(sam_juncs_SOURCES) \
	$(segment_juncs_SOURCES) $(tophat_reports_SOURCES) \
	$(wiggles_SOURCES)
DIST_SOURCES = $(libgc_a_SOURCES) $(libtophat_a_SOURCES) \
	$(closure_juncs_SOURCES) $(extract_reads_SOURCES) \
	$(fix_map_ordering_SOURCES) $(gtf_juncs_SOURCES) \
	$(juncs_db_SOURCES) $(library_stats_SOURCES) \
	$(long_spanning_reads_SOURCES) $(mask_sam_SOURCES) \
	$(prep_reads_SOURCES) $(sam_juncs_SOURCES) \
	$(segment_juncs_SOURCES) $(tophat_reports_SOURCES) \
	$(wiggles_SOURCES)
HEADERS = $(noinst_HEADERS)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /nfshomes/infphilo/TopHat/fusion_search/build-aux/missing --run aclocal-1.9
AMDEP_FALSE = #
AMDEP_TRUE = 
AMTAR = ${SHELL} /nfshomes/infphilo/TopHat/fusion_search/build-aux/missing --run tar
AM_CFLAGS = 
AM_CXXFLAGS = -Wall -m64 -O3  -DNDEBUG -I/fs/szdevel/infphilo/include -I./SeqAn-1.2
AR = ar
AUTOCONF = ${SHELL} /nfshomes/infphilo/TopHat/fusion_search/build-aux/missing --run autoconf
AUTOHEADER = ${SHELL} /nfshomes/infphilo/TopHat/fusion_search/build-aux/missing --run autoheader
AUTOMAKE = ${SHELL} /nfshomes/infphilo/TopHat/fusion_search/build-aux/missing --run automake-1.9
AWK = gawk
BAM_CPPFLAGS = -I/fs/szdevel/infphilo/include
BAM_LDFLAGS = -L/fs/szdevel/infphilo/lib
BAM_LIB = -lbam
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -Wall -m64 -O3  -DNDEBUG
CPP = gcc -E
CPPFLAGS =  -I/usr/include
CXX = g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -Wall -m64 -O3  -DNDEBUG -I/fs/szdevel/infphilo/include
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = grep -E
EXEEXT = 
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = ${SHELL} $(install_sh) -c -s
LDFLAGS =  -L/usr/lib
LIBOBJS = 
LIBS = -lz -lz 
LTLIBOBJS = 
MAKEINFO = ${SHELL} /nfshomes/infphilo/TopHat/fusion_search/build-aux/missing --run makeinfo
OBJEXT = o
PACKAGE = tophat
PACKAGE_BUGREPORT = cole@cs.umd.edu
PACKAGE_NAME = tophat
PACKAGE_STRING = tophat 1.2.0
PACKAGE_TARNAME = tophat
PACKAGE_VERSION = 1.2.0
PATH_SEPARATOR = :
PERL = /usr/bin/perl
PYTHON = /fs/szdevel/core-cbcb-software/Linux-x86_64/bin/python
PYTHON_EXEC_PREFIX = ${exec_prefix}
PYTHON_PLATFORM = linux2
PYTHON_PREFIX = ${prefix}
PYTHON_VERSION = 2.7
RANLIB = ranlib
SET_MAKE = 
SHELL = /bin/sh
STRIP = 
TOPHAT_SHELL = /bin/bash
VERSION = 1.2.0
ZLIB = -lz
ac_ct_AR = ar
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_RANLIB = ranlib
ac_ct_STRIP = 
am__fastdepCC_FALSE = #
am__fastdepCC_TRUE = 
am__fastdepCXX_FALSE = #
am__fastdepCXX_TRUE = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = tar --format=posix -chf - "$$tardir"
am__untar = tar -xf -
bindir = ${exec_prefix}/bin
build = x86_64-unknown-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = unknown
datadir = ${prefix}/share
exec_prefix = ${prefix}
host = x86_64-unknown-linux-gnu
host_alias = 
host_cpu = x86_64
host_os = linux-gnu
host_vendor = unknown
includedir = ${prefix}/include
infodir = ${prefix}/info
install_sh = /nfshomes/infphilo/TopHat/fusion_search/build-aux/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localstatedir = ${prefix}/var
mandir = ${prefix}/man
mkdir_p = mkdir -p --
oldincludedir = /usr/include
pkgpyexecdir = ${pyexecdir}/tophat
pkgpythondir = ${pythondir}/tophat
prefix = /fs/szattic-asmg6/infphilo/TopHat/fusion_search
program_transform_name = s,x,x,
pyexecdir = ${exec_prefix}/lib/python2.7/site-packages
pythondir = ${prefix}/lib/python2.7/site-packages
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
sysconfdir = ${prefix}/etc
target_alias = 

#SUBDIRS = samtools

#AM_CXXFLAGS = -I$(top_srcdir)/src/SeqAn-1.2

# Generated with 
# find SeqAn-1.2 -type f -print | grep -v ".svn" | sed 's/$/ \\/g'
# run from src
EXTRA_DIST = \
SeqAn-1.2/GPL.txt \
SeqAn-1.2/LGPL.txt \
SeqAn-1.2/platform_linux_gcc.h \
SeqAn-1.2/platform_windows_mingw.h \
SeqAn-1.2/platform_windows_vs.h \
SeqAn-1.2/seqan/basic/basic_aggregates.h \
SeqAn-1.2/seqan/basic/basic_allocator_chunkpool.h \
SeqAn-1.2/seqan/basic/basic_allocator_interface.h \
SeqAn-1.2/seqan/basic/basic_allocator_multipool.h \
SeqAn-1.2/seqan/basic/basic_allocator_simple.h \
SeqAn-1.2/seqan/basic/basic_allocator_singlepool.h \
SeqAn-1.2/seqan/basic/basic_allocator_to_std.h \
SeqAn-1.2/seqan/basic/basic_alphabet_interface.h \
SeqAn-1.2/seqan/basic/basic_alphabet_interface2.h \
SeqAn-1.2/seqan/basic/basic_alphabet_simple.h \
SeqAn-1.2/seqan/basic/basic_alphabet_simple_tabs.h \
SeqAn-1.2/seqan/basic/basic_alphabet_trait_basic.h \
SeqAn-1.2/seqan/basic/basic_compare.h \
SeqAn-1.2/seqan/basic/basic_converter.h \
SeqAn-1.2/seqan/basic/basic_counted_ptr.h \
SeqAn-1.2/seqan/basic/basic_debug.h \
SeqAn-1.2/seqan/basic/basic_definition.h \
SeqAn-1.2/seqan/basic/basic_forwards.h \
SeqAn-1.2/seqan/basic/basic_generated_forwards.h \
SeqAn-1.2/seqan/basic/basic_holder.h \
SeqAn-1.2/seqan/basic/basic_host.h \
SeqAn-1.2/seqan/basic/basic_iterator.h \
SeqAn-1.2/seqan/basic/basic_iterator_adapt_std.h \
SeqAn-1.2/seqan/basic/basic_iterator_adaptor.h \
SeqAn-1.2/seqan/basic/basic_iterator_base.h \
SeqAn-1.2/seqan/basic/basic_iterator_position.h \
SeqAn-1.2/seqan/basic/basic_iterator_simple.h \
SeqAn-1.2/seqan/basic/basic_metaprogramming.h \
SeqAn-1.2/seqan/basic/basic_operator.h \
SeqAn-1.2/seqan/basic/basic_pointer.h \
SeqAn-1.2/seqan/basic/basic_profile.h \
SeqAn-1.2/seqan/basic/basic_proxy.h \
SeqAn-1.2/seqan/basic/basic_tag.h \
SeqAn-1.2/seqan/basic/basic_transport.h \
SeqAn-1.2/seqan/basic/basic_type.h \
SeqAn-1.2/seqan/basic/basic_volatile_ptr.h \
SeqAn-1.2/seqan/basic.h \
SeqAn-1.2/seqan/modifier/modifier_generated_forwards.h \
SeqAn-1.2/seqan/modifier/modifier_shortcuts.h \
SeqAn-1.2/seqan/modifier/modifier_functors.h \
SeqAn-1.2/seqan/modifier/modifier_iterator.h \
SeqAn-1.2/seqan/modifier/modifier_reverse.h \
SeqAn-1.2/seqan/modifier/modifier_string.h \
SeqAn-1.2/seqan/modifier/modifier_view.h \
SeqAn-1.2/seqan/modifier.h \
SeqAn-1.2/seqan/file/chunk_collector.h \
SeqAn-1.2/seqan/file/cstream.h \
SeqAn-1.2/seqan/file/file_array.h \
SeqAn-1.2/seqan/file/file_base.h \
SeqAn-1.2/seqan/file/file_format.h \
SeqAn-1.2/seqan/file/file_format_cgviz.h \
SeqAn-1.2/seqan/file/file_format_fasta.h \
SeqAn-1.2/seqan/file/file_format_fasta_align.h \
SeqAn-1.2/seqan/file/file_format_guess.h \
SeqAn-1.2/seqan/file/file_format_raw.h \
SeqAn-1.2/seqan/file/file_forwards.h \
SeqAn-1.2/seqan/file/file_generated_forwards.h \
SeqAn-1.2/seqan/file/meta.h \
SeqAn-1.2/seqan/file/stream.h \
SeqAn-1.2/seqan/file/stream_algorithms.h \
SeqAn-1.2/seqan/file.h \
SeqAn-1.2/seqan/find/find_base.h \
SeqAn-1.2/seqan/find/find_generated_forwards.h \
SeqAn-1.2/seqan/find/find_horspool.h \
SeqAn-1.2/seqan/find/find_multi.h \
SeqAn-1.2/seqan/find/find_multiple_shiftand.h \
SeqAn-1.2/seqan/find/find_score.h \
SeqAn-1.2/seqan/find/find_set_horspool.h \
SeqAn-1.2/seqan/find.h \
SeqAn-1.2/seqan/index/index_base.h \
SeqAn-1.2/seqan/index/index_find.h \
SeqAn-1.2/seqan/index/index_generated_forwards.h \
SeqAn-1.2/seqan/index/index_manual_forwards.h \
SeqAn-1.2/seqan/index/index_sa_lss.h \
SeqAn-1.2/seqan/index/shape_base.h \
SeqAn-1.2/seqan/index/shape_gapped.h \
SeqAn-1.2/seqan/index/shape_predefined.h \
SeqAn-1.2/seqan/index.h \
SeqAn-1.2/seqan/platform.h \
SeqAn-1.2/seqan/sequence/lexical.h \
SeqAn-1.2/seqan/sequence/segment_base.h \
SeqAn-1.2/seqan/sequence/segment_infix.h \
SeqAn-1.2/seqan/sequence/segment_prefix.h \
SeqAn-1.2/seqan/sequence/segment_suffix.h \
SeqAn-1.2/seqan/sequence/sequence_forwards.h \
SeqAn-1.2/seqan/sequence/sequence_generated_forwards.h \
SeqAn-1.2/seqan/sequence/sequence_interface.h \
SeqAn-1.2/seqan/sequence/sequence_multiple.h \
SeqAn-1.2/seqan/sequence/sequence_shortcuts.h \
SeqAn-1.2/seqan/sequence/std_string.h \
SeqAn-1.2/seqan/sequence/string_alloc.h \
SeqAn-1.2/seqan/sequence/string_array.h \
SeqAn-1.2/seqan/sequence/string_base.h \
SeqAn-1.2/seqan/sequence/string_cstyle.h \
SeqAn-1.2/seqan/sequence/string_packed.h \
SeqAn-1.2/seqan/sequence/string_pointer.h \
SeqAn-1.2/seqan/sequence/string_stack.h \
SeqAn-1.2/seqan/sequence/string_value_expand.h \
SeqAn-1.2/seqan/sequence.h 


#-- scripts to be installed in $prefix/bin
dist_bin_SCRIPTS = \
	contig_to_chr_coords.py \
	tophat.py \
	tophat-fusion.py \
	tophat-fusion-post.py \
	bed_to_juncs.py \
	sra_to_solid.py


#-- tophat library for linking convienence
noinst_LIBRARIES = libtophat.a libgc.a
noinst_HEADERS = \
	reads.h \
	codons.h \
	common.h \
	GBase.h \
	gdna.h \
	GFaSeqGet.h \
	gff.h \
	GHash.hh \
	GList.hh \
	GStr.h \
	bwt_map.h \
	wiggles.h \
	junctions.h \
	assert_helpers.h \
	insertions.h \
	deletions.h \
	fusions.h \
	align_status.h \
	alphabet.h \
	timer.h \
	closures.h \
	tokenize.h \
	fragments.h \
	inserts.h \
	segments.h \
	qual.h

libtophat_a_SOURCES = \
	reads.cpp \
	alphabet.c \
	bwt_map.cpp \
	common.cpp \
	junctions.cpp \
	insertions.cpp \
	deletions.cpp \
	fusions.cpp \
	align_status.cpp \
	fragments.cpp \
	tokenize.cpp \
	inserts.cpp \
	qual.cpp

libgc_a_SOURCES = \
	GBase.cpp \
	codons.cpp \
	gdna.cpp \
	GStr.cpp \
	GFaSeqGet.cpp \
	gff.cpp


#-- program sources
prep_reads_SOURCES = prep_reads.cpp
prep_reads_LDADD = $(top_builddir)/src/libtophat.a $(BAM_LIB)
prep_reads_LDFLAGS = $(BAM_LDFLAGS)
segment_juncs_SOURCES = segment_juncs.cpp
segment_juncs_LDADD = $(top_builddir)/src/libtophat.a  $(BAM_LIB)
segment_juncs_LDFLAGS = $(BAM_LDFLAGS)
long_spanning_reads_SOURCES = long_spanning_reads.cpp
long_spanning_reads_LDADD = $(top_builddir)/src/libtophat.a $(BAM_LIB)
long_spanning_reads_LDFLAGS = $(BAM_LDFLAGS)
gtf_juncs_SOURCES = gtf_juncs.cpp
gtf_juncs_LDADD = $(top_builddir)/src/libtophat.a libgc.a $(BAM_LIB)
gtf_juncs_LDFLAGS = $(BAM_LDFLAGS)
juncs_db_SOURCES = juncs_db.cpp
juncs_db_LDADD = $(top_builddir)/src/libtophat.a $(BAM_LIB)
juncs_db_LDFLAGS = $(BAM_LDFLAGS)
library_stats_SOURCES = library_stats.cpp
library_stats_LDADD = $(top_builddir)/src/libtophat.a $(BAM_LIB)
library_stats_LDFLAGS = $(BAM_LDFLAGS)
tophat_reports_SOURCES = tophat_reports.cpp
tophat_reports_LDADD = $(top_builddir)/src/libtophat.a  $(BAM_LIB)
tophat_reports_LDFLAGS = $(BAM_LDFLAGS)
extract_reads_SOURCES = extract_reads.cpp
extract_reads_LDADD = $(top_builddir)/src/libtophat.a $(BAM_LIB)
extract_reads_LDFLAGS = $(BAM_LDFLAGS)
fix_map_ordering_SOURCES = fix_map_ordering.cpp
fix_map_ordering_LDADD = $(top_builddir)/src/libtophat.a $(BAM_LIB)
fix_map_ordering_LDFLAGS = $(BAM_LDFLAGS)
closure_juncs_SOURCES = closures.cpp
closure_juncs_LDADD = $(top_builddir)/src/libtophat.a $(BAM_LIB)
closure_juncs_LDFLAGS = $(BAM_LDFLAGS)
mask_sam_SOURCES = mask_sam.cpp
mask_sam_LDADD = $(top_builddir)/src/libtophat.a $(BAM_LIB)
mask_sam_LDFLAGS = $(BAM_LDFLAGS)
wiggles_SOURCES = wiggles.cpp
wiggles_LDADD = $(top_builddir)/src/libtophat.a $(BAM_LIB)
wiggles_LDFLAGS = $(BAM_LDFLAGS)
sam_juncs_SOURCES = sam_juncs.cpp
sam_juncs_LDADD = $(top_builddir)/src/libtophat.a $(BAM_LIB)
sam_juncs_LDFLAGS = $(BAM_LDFLAGS)
all: all-am

.SUFFIXES:
.SUFFIXES: .c .cpp .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am $(top_srcdir)/build-aux/tophat.mk $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign  src/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --foreign  src/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

clean-noinstLIBRARIES:
	-test -z "$(noinst_LIBRARIES)" || rm -f $(noinst_LIBRARIES)
libgc.a: $(libgc_a_OBJECTS) $(libgc_a_DEPENDENCIES) 
	-rm -f libgc.a
	$(libgc_a_AR) libgc.a $(libgc_a_OBJECTS) $(libgc_a_LIBADD)
	$(RANLIB) libgc.a
libtophat.a: $(libtophat_a_OBJECTS) $(libtophat_a_DEPENDENCIES) 
	-rm -f libtophat.a
	$(libtophat_a_AR) libtophat.a $(libtophat_a_OBJECTS) $(libtophat_a_LIBADD)
	$(RANLIB) libtophat.a
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(bindir)" || $(mkdir_p) "$(DESTDIR)$(bindir)"
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  p1=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  if test -f $$p \
	  ; then \
	    f=`echo "$$p1" | sed 's,^.*/,,;$(transform);s/$$/$(EXEEXT)/'`; \
	   echo " $(INSTALL_PROGRAM_ENV) $(binPROGRAMS_INSTALL) '$$p' '$(DESTDIR)$(bindir)/$$f'"; \
	   $(INSTALL_PROGRAM_ENV) $(binPROGRAMS_INSTALL) "$$p" "$(DESTDIR)$(bindir)/$$f" || exit 1; \
	  else :; fi; \
	done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's,^.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/'`; \
	  echo " rm -f '$(DESTDIR)$(bindir)/$$f'"; \
	  rm -f "$(DESTDIR)$(bindir)/$$f"; \
	done

clean-binPROGRAMS:
	-test -z "$(bin_PROGRAMS)" || rm -f $(bin_PROGRAMS)
closure_juncs$(EXEEXT): $(closure_juncs_OBJECTS) $(closure_juncs_DEPENDENCIES) 
	@rm -f closure_juncs$(EXEEXT)
	$(CXXLINK) $(closure_juncs_LDFLAGS) $(closure_juncs_OBJECTS) $(closure_juncs_LDADD) $(LIBS)
extract_reads$(EXEEXT): $(extract_reads_OBJECTS) $(extract_reads_DEPENDENCIES) 
	@rm -f extract_reads$(EXEEXT)
	$(CXXLINK) $(extract_reads_LDFLAGS) $(extract_reads_OBJECTS) $(extract_reads_LDADD) $(LIBS)
fix_map_ordering$(EXEEXT): $(fix_map_ordering_OBJECTS) $(fix_map_ordering_DEPENDENCIES) 
	@rm -f fix_map_ordering$(EXEEXT)
	$(CXXLINK) $(fix_map_ordering_LDFLAGS) $(fix_map_ordering_OBJECTS) $(fix_map_ordering_LDADD) $(LIBS)
gtf_juncs$(EXEEXT): $(gtf_juncs_OBJECTS) $(gtf_juncs_DEPENDENCIES) 
	@rm -f gtf_juncs$(EXEEXT)
	$(CXXLINK) $(gtf_juncs_LDFLAGS) $(gtf_juncs_OBJECTS) $(gtf_juncs_LDADD) $(LIBS)
juncs_db$(EXEEXT): $(juncs_db_OBJECTS) $(juncs_db_DEPENDENCIES) 
	@rm -f juncs_db$(EXEEXT)
	$(CXXLINK) $(juncs_db_LDFLAGS) $(juncs_db_OBJECTS) $(juncs_db_LDADD) $(LIBS)
library_stats$(EXEEXT): $(library_stats_OBJECTS) $(library_stats_DEPENDENCIES) 
	@rm -f library_stats$(EXEEXT)
	$(CXXLINK) $(library_stats_LDFLAGS) $(library_stats_OBJECTS) $(library_stats_LDADD) $(LIBS)
long_spanning_reads$(EXEEXT): $(long_spanning_reads_OBJECTS) $(long_spanning_reads_DEPENDENCIES) 
	@rm -f long_spanning_reads$(EXEEXT)
	$(CXXLINK) $(long_spanning_reads_LDFLAGS) $(long_spanning_reads_OBJECTS) $(long_spanning_reads_LDADD) $(LIBS)
mask_sam$(EXEEXT): $(mask_sam_OBJECTS) $(mask_sam_DEPENDENCIES) 
	@rm -f mask_sam$(EXEEXT)
	$(CXXLINK) $(mask_sam_LDFLAGS) $(mask_sam_OBJECTS) $(mask_sam_LDADD) $(LIBS)
prep_reads$(EXEEXT): $(prep_reads_OBJECTS) $(prep_reads_DEPENDENCIES) 
	@rm -f prep_reads$(EXEEXT)
	$(CXXLINK) $(prep_reads_LDFLAGS) $(prep_reads_OBJECTS) $(prep_reads_LDADD) $(LIBS)
sam_juncs$(EXEEXT): $(sam_juncs_OBJECTS) $(sam_juncs_DEPENDENCIES) 
	@rm -f sam_juncs$(EXEEXT)
	$(CXXLINK) $(sam_juncs_LDFLAGS) $(sam_juncs_OBJECTS) $(sam_juncs_LDADD) $(LIBS)
segment_juncs$(EXEEXT): $(segment_juncs_OBJECTS) $(segment_juncs_DEPENDENCIES) 
	@rm -f segment_juncs$(EXEEXT)
	$(CXXLINK) $(segment_juncs_LDFLAGS) $(segment_juncs_OBJECTS) $(segment_juncs_LDADD) $(LIBS)
tophat_reports$(EXEEXT): $(tophat_reports_OBJECTS) $(tophat_reports_DEPENDENCIES) 
	@rm -f tophat_reports$(EXEEXT)
	$(CXXLINK) $(tophat_reports_LDFLAGS) $(tophat_reports_OBJECTS) $(tophat_reports_LDADD) $(LIBS)
wiggles$(EXEEXT): $(wiggles_OBJECTS) $(wiggles_DEPENDENCIES) 
	@rm -f wiggles$(EXEEXT)
	$(CXXLINK) $(wiggles_LDFLAGS) $(wiggles_OBJECTS) $(wiggles_LDADD) $(LIBS)
install-dist_binSCRIPTS: $(dist_bin_SCRIPTS)
	@$(NORMAL_INSTALL)
	test -z "$(bindir)" || $(mkdir_p) "$(DESTDIR)$(bindir)"
	@list='$(dist_bin_SCRIPTS)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  if test -f $$d$$p; then \
	    f=`echo "$$p" | sed 's|^.*/||;$(transform)'`; \
	    echo " $(dist_binSCRIPT_INSTALL) '$$d$$p' '$(DESTDIR)$(bindir)/$$f'"; \
	    $(dist_binSCRIPT_INSTALL) "$$d$$p" "$(DESTDIR)$(bindir)/$$f"; \
	  else :; fi; \
	done

uninstall-dist_binSCRIPTS:
	@$(NORMAL_UNINSTALL)
	@list='$(dist_bin_SCRIPTS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's|^.*/||;$(transform)'`; \
	  echo " rm -f '$(DESTDIR)$(bindir)/$$f'"; \
	  rm -f "$(DESTDIR)$(bindir)/$$f"; \
	done

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/GBase.Po
include ./$(DEPDIR)/GFaSeqGet.Po
include ./$(DEPDIR)/GStr.Po
include ./$(DEPDIR)/align_status.Po
include ./$(DEPDIR)/alphabet.Po
include ./$(DEPDIR)/bwt_map.Po
include ./$(DEPDIR)/closures.Po
include ./$(DEPDIR)/codons.Po
include ./$(DEPDIR)/common.Po
include ./$(DEPDIR)/deletions.Po
include ./$(DEPDIR)/extract_reads.Po
include ./$(DEPDIR)/fix_map_ordering.Po
include ./$(DEPDIR)/fragments.Po
include ./$(DEPDIR)/fusions.Po
include ./$(DEPDIR)/gdna.Po
include ./$(DEPDIR)/gff.Po
include ./$(DEPDIR)/gtf_juncs.Po
include ./$(DEPDIR)/insertions.Po
include ./$(DEPDIR)/inserts.Po
include ./$(DEPDIR)/juncs_db.Po
include ./$(DEPDIR)/junctions.Po
include ./$(DEPDIR)/library_stats.Po
include ./$(DEPDIR)/long_spanning_reads.Po
include ./$(DEPDIR)/mask_sam.Po
include ./$(DEPDIR)/prep_reads.Po
include ./$(DEPDIR)/qual.Po
include ./$(DEPDIR)/reads.Po
include ./$(DEPDIR)/sam_juncs.Po
include ./$(DEPDIR)/segment_juncs.Po
include ./$(DEPDIR)/tokenize.Po
include ./$(DEPDIR)/tophat_reports.Po
include ./$(DEPDIR)/wiggles.Po

.c.o:
	if $(COMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c $<

.c.obj:
	if $(COMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ `$(CYGPATH_W) '$<'`; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c `$(CYGPATH_W) '$<'`

.cpp.o:
	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ `$(CYGPATH_W) '$<'`; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`
uninstall-info-am:

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	$(mkdir_p) $(distdir)/../build-aux $(distdir)/SeqAn-1.2 $(distdir)/SeqAn-1.2/seqan $(distdir)/SeqAn-1.2/seqan/basic $(distdir)/SeqAn-1.2/seqan/file $(distdir)/SeqAn-1.2/seqan/find $(distdir)/SeqAn-1.2/seqan/index $(distdir)/SeqAn-1.2/seqan/modifier $(distdir)/SeqAn-1.2/seqan/sequence
	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
	list='$(DISTFILES)'; for file in $$list; do \
	  case $$file in \
	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
	  esac; \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkdir_p) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LIBRARIES) $(PROGRAMS) $(SCRIPTS) $(HEADERS)
installdirs:
	for dir in "$(DESTDIR)$(bindir)" "$(DESTDIR)$(bindir)"; do \
	  test -z "$$dir" || $(mkdir_p) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic clean-noinstLIBRARIES \
	mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

info: info-am

info-am:

install-data-am:

install-exec-am: install-binPROGRAMS install-dist_binSCRIPTS
	@$(NORMAL_INSTALL)
	$(MAKE) $(AM_MAKEFLAGS) install-exec-hook

install-info: install-info-am

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-dist_binSCRIPTS \
	uninstall-info-am
	@$(NORMAL_INSTALL)
	$(MAKE) $(AM_MAKEFLAGS) uninstall-hook

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-binPROGRAMS \
	clean-generic clean-noinstLIBRARIES ctags distclean \
	distclean-compile distclean-generic distclean-tags distdir dvi \
	dvi-am html html-am info info-am install install-am \
	install-binPROGRAMS install-data install-data-am \
	install-dist_binSCRIPTS install-exec install-exec-am \
	install-exec-hook install-info install-info-am install-man \
	install-strip installcheck installcheck-am installdirs \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-compile mostlyclean-generic pdf pdf-am ps ps-am \
	tags uninstall uninstall-am uninstall-binPROGRAMS \
	uninstall-dist_binSCRIPTS uninstall-hook uninstall-info-am


install-exec-hook: install-bin-scripts-hook

uninstall-hook: uninstall-bin-scripts-hook

install-bin-scripts-hook: $(dist_bin_SCRIPTS) $(bin_SCRIPTS)
	@$(NORMAL_INSTALL)
	@list='$(dist_bin_SCRIPTS) $(bin_SCRIPTS)'; for p in $$list; do \
          f=`echo "$$p" | sed 's|^.*/||;$(transform)'`; \
          b=`echo "$$p" | sed 's|^.*/||;s|.[^.]*$$||;$(transform)'`; \
          if test -f "$(DESTDIR)$(bindir)/$$f"  &&  test "$$f" != "$$b"; then \
            $(INSTALL_SCRIPT) "$(DESTDIR)$(bindir)/$$f" "$(DESTDIR)$(bindir)/$$b" \
            || exit 1; \
            case "$$p" in \
              *.py) \
                echo " configuring python '$$b'"; \
                echo '#!$(PYTHON)' > "$(DESTDIR)$(bindir)/$$b"; \
                sed -e '1 {s|^#!.*$$||;}' \
                    "$(DESTDIR)$(bindir)/$$f" >> "$(DESTDIR)$(bindir)/$$b" \
                || exit 1; \
                ;; \
              *.sh) \
                echo " configuring shell '$$b', using #!$(TOPHAT_SHELL)"; \
                echo '#!$(TOPHAT_SHELL)' > "$(DESTDIR)$(bindir)/$$b"; \
                sed -e '1 {s|^#!.*$$||;}' \
                    -e 's|BINDIR[[:space:]]*=.*|BINDIR=$(bindir)|' \
                    "$(DESTDIR)$(bindir)/$$f" >> "$(DESTDIR)$(bindir)/$$b" \
                || exit 1; \
                ;; \
			  *.pl) \
	                echo " configuring perl '$$b'"; \
	                echo '#!$(PERL)' > "$(DESTDIR)$(bindir)/$$b"; \
	                sed -e '1 {s|^#!.*$$||;}' \
	                    "$(DESTDIR)$(bindir)/$$f" >> "$(DESTDIR)$(bindir)/$$b" \
	                || exit 1; \
	                ;; \
              *) \
                echo " configuring '$$b'"; \
                cp "$(DESTDIR)$(bindir)/$$f" "$(DESTDIR)$(bindir)/$$b" \
                ;; \
            esac; \
            rm -f "$(DESTDIR)$(bindir)/$$f"; \
          else :; fi; \
        done

uninstall-bin-scripts-hook:
	@$(NORMAL_UNINSTALL)
	@list='$(dist_bin_SCRIPTS) $(bin_SCRIPTS)'; for p in $$list; do \
          b=`echo "$$p" | sed 's|^.*/||;s|.[^.]*$$||;$(transform)'`; \
          echo " rm -f '$(DESTDIR)$(bindir)/$$b'"; \
          rm -f "$(DESTDIR)$(bindir)/$$b"; \
        done
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
